// n is number of stars required
@function multiple-box-shadow ($n) {
  // First star
  $stars: "#{random($starFieldWidth)}px #{random($starFieldHeight)}px #FFF";

  @for $i from 2 through $n {
    // Iterate through and append stars to string
    $stars: "#{$stars} , #{random($starFieldWidth)}px #{random($starFieldHeight)}px #FFF";
  }

  // Return all generated stars
  @return unquote($stars);
}

@mixin star-template($numStars, $starSize, $scrollSpeed)
{
  z-index: 10;
  width: $starSize;
  height: $starSize;
  background: transparent;
  box-shadow: multiple-box-shadow($numStars);
  animation: animStar $scrollSpeed linear infinite;

  &:after
  {
    content: " ";
    top: -$starStartOffset;
    width: $starSize;
    height: $starSize;
    position: absolute;
    background: transparent;
    box-shadow: multiple-box-shadow($numStars);
  }
}

@mixin gradient-border($color1, $color2, $border-width, $direction) {
  border: none;
  background-repeat: no-repeat;
  background-image: linear-gradient(#{$direction}, $color1 0%, $color2 100%), linear-gradient(#{$direction}, $color1 0%, $color2 100%);
  @if $direction == 'to right' or $direction == 'to left' {
    @if $direction == 'to right' {
      border-left: $border-width solid $color1;
      border-right: $border-width solid $color2;
    } @else {
      border-left: $border-width solid $color2;
      border-right: $border-width solid $color1;
    }
    background-position: 0 0, 0 100%;
    background-size: 100% $border-width;
  }

  @if $direction == 'to top' or $direction == 'to bottom' {
    @if $direction == 'to top' {
      border-top: $border-width solid $color2;
      border-bottom: $border-width solid $color1;
    } @else {
      border-top: $border-width solid $color1;
      border-bottom: $border-width solid $color2;
    }
    background-position: 0 0, 100% 0;
    background-size: $border-width 100%;
  }
}